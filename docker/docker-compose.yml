version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:7.0
    container_name: knight-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: knight123
      MONGO_INITDB_DATABASE: knight_game
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - knight-network

  # Redis缓存
  redis:
    image: redis:7.0-alpine
    container_name: knight-redis
    restart: unless-stopped
    command: redis-server --requirepass knight123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - knight-network

  # Gateway服务器
  gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.gateway
    container_name: knight-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=gateway
      - JAVA_OPTS=-Xms2g -Xmx4g
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    networks:
      - knight-network
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: '2.0'
        reservations:
          memory: 4G
          cpus: '1.0'

  # Logic服务器
  logic:
    build:
      context: .
      dockerfile: docker/Dockerfile.logic
    container_name: knight-logic
    restart: unless-stopped
    ports:
      - "9001:9001"
    environment:
      - SPRING_PROFILES_ACTIVE=logic
      - JAVA_OPTS=-Xms4g -Xmx8g
      - MONGODB_URI=mongodb://admin:knight123@mongodb:27017/knight_game?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PASSWORD=knight123
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    networks:
      - knight-network
    deploy:
      resources:
        limits:
          memory: 10G
          cpus: '4.0'
        reservations:
          memory: 6G
          cpus: '2.0'

  # Nginx负载均衡
  nginx:
    image: nginx:alpine
    container_name: knight-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - gateway
    networks:
      - knight-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: knight-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - knight-network

  # Grafana仪表板
  grafana:
    image: grafana/grafana:latest
    container_name: knight-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=knight123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - knight-network

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  knight-network:
    driver: bridge